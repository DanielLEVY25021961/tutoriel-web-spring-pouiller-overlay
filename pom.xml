<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<!-- Version du POM. -->
	<modelVersion>4.0.0</modelVersion>
	
	<!-- ========================================================== -->
	<!-- GAV (identifiant du projet)                                -->
	<!-- G : groupId : nom de domaine                               -->
	<!-- A : artifactId : nom du projet                             -->
	<!-- V : version : version du projet                            -->
	<!-- ========================================================== -->
	<!-- domaine (espace de nom) appelé GROUPE (G) dans Maven -->	
	<groupId>levy.daniel.application</groupId>
	<!-- Nom du projet appelé artifactId (A) dans Maven -->
	<artifactId>tutoriel-web-spring-pouiller-overlay</artifactId>
	<!-- Version Bêta de développement (SNAPSHOT) -->
	<!--non incrémentée dans Maven -->
	<version>0.0.1-SNAPSHOT</version>
	
	
	<!-- ========================================================== -->
	<!--                       PACKAGING                            -->
	<!-- Préciser ici la forme du livrable                          -->
	<!-- que le projet Maven doit produire (war, jar,               -->
	<!--	POM, ...).                                              -->
	<!-- ========================================================== -->
	<!-- Résultat du Packaging (forme du livrable). Ici war -->	
	<packaging>war</packaging>


	<!-- ========================================================== -->
	<!-- NOM DU LIVRABLE GENERE PAR MAVEN                           -->
	<!-- Préciser le nom du livrable que Maven doit produire        -->
	<!-- (monapplication.war,                                       -->
	<!-- monapplication.jar, monapplication.POM, ...).              -->
	<!-- ========================================================== -->
	<!-- Nom de l'application générée par le projet Maven -->	
	<name>tutoriel-web-spring-pouiller-overlay</name>
	<!-- Description de l'application générée par le projet Maven -->
	<description>tutoriel de Régis Pouiller avec Spring et Maven SURCHARGE</description>
	<!-- URL éventuelle permettant de se connecter à l'application -->
	<url></url>


    <!-- ================================================ -->
	<!--                    PROPERTIEs                    -->
	<!-- Préciser ici les propriétés générales du projet. -->
	<!-- ================================================ -->
	<properties>
		<!-- Force l'encoding des sources du projet en UTF-8 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Vérifie la conformité des classes Java (.java) avec le JDK 1.8 -->
		<maven.compiler.source>1.8</maven.compiler.source>
		<!-- Vérifie la conformité des classes Java (.class) avec le JDK 1.8 -->
		<maven.compiler.target>1.8</maven.compiler.target>
		<!-- Encodage pourle Reporting (site web) -->
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>


	<dependencies>

		<!-- LE WAR A SURCHARGER doit être vu comme une DEPENDANCE. -->
		<!-- LE WAR LIVRE PAR LE PRESTATAIRE DOIT AVOIR ETE INSTALLE DANS LE DEPOT 
			LOCAL (.m2/repository) -->
<!-- 		<dependency> -->
<!-- 			<groupId>levy.daniel.application</groupId> -->
<!-- 			<artifactId>tutoriel-web-spring-pouiller</artifactId> -->
<!-- 			<version>0.0.1-SNAPSHOT</version> -->
<!-- 			<type>war</type> -->
<!-- 		</dependency> -->

		<!-- CAS SANS PROJET CIBLE -->
		<!-- LE WAR A SURCHARGER est vu comme une RESSOURCE EXTERNE. -->
		<!-- LE WAR LIVRE PAR LE PRESTATAIRE DOIT AVOIR ETE INSTALLE DANS D:/PROJET_FINAL -->
		<dependency>
			<groupId>levy.daniel.application</groupId>
			<artifactId>tutoriel-web-spring-pouiller</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<type>war</type>
			<!-- RAJOUTER LE SCOPE SYSTEM -->
			<scope>system</scope>
			<!-- Indique le path de l'artefact (war) à surcharger. -->
			<systemPath>D:/PROJET_FINAL/tutoriel-web-spring-pouiller-0.0.1-SNAPSHOT.war</systemPath>
		</dependency>

	</dependencies>




	<build>
		<plugins>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-war-plugin -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<overlays>
						<overlay>
							<groupId>levy.daniel.application</groupId>
							<artifactId>tutoriel-web-spring-pouiller</artifactId>
							<!-- Exclure les jar et ressources voulus. -->
							<excludes>
								<exclude>index.html</exclude>
								<!-- <exclude>cerbere-bouchon.4.4.2.jar</exclude> -->
							</excludes>
							<!-- A QUI CA SERT ??? -->
							<includes>
<!-- 								<include>${basedir}/index_cible.html</include> -->
<!-- 								<include>${basedir}/cerbere-prod.4.3.3.jar</include> -->
							</includes>
						</overlay>
					</overlays>
					<!-- Empeche la vérification de la présence du web.xml -->
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<compilerArguments>
						<endorseddirs>${endorsed.dir}</endorseddirs>
					</compilerArguments>
				</configuration>
			</plugin>
		</plugins>
	</build>


	<profiles>

		<profile>
			<id>profil-dev</id>
			<activation>
				<property>
					<name>env</name>
					<value>dev</value>
				</property>
			</activation>
			<properties>
				<!-- <tomcatPath>/path/to/tomcat/instance</tomcatPath> -->
			</properties>

			<build>
				<plugins>
					<plugin>
						<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-war-plugin -->
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>3.1.0</version>
						<configuration>
							<overlays>
								<overlay>
									<groupId>levy.daniel.application</groupId>
									<artifactId>tutoriel-web-spring-pouiller</artifactId>
									<excludes>
										<exclude>WEB-INF/vues/bonjour.jsp</exclude>
									</excludes>
								</overlay>
							</overlays>
							<failOnMissingWebXml>false</failOnMissingWebXml>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>





</project>